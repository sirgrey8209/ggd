{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Game","props","state","num1","undefined","num2","answer","timerEnd","timerDuration","timerRatio","i","this","setTimer","duration","newState","Date","setState","clearInterval","timer","setInterval","updateTimer","timeLeft","className","style","width","window","innerWidth","renderTimer","onClick","handleClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAuGeA,E,kDAnGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAOC,EACPC,UAAOD,EACPE,YAASF,EACTG,cAAWH,EACXI,mBAAgBJ,EAChBK,gBAAaL,GARE,E,+CAanB,SAAYM,GACVC,KAAKC,SAAS,K,sBAGhB,SAASC,GACR,IAAD,OACMC,EAAQ,eAAOH,KAAKT,OACxBY,EAASP,UAAc,IAAIQ,KAAqB,IAAXF,EACrCC,EAASN,cAAgBK,EACzBC,EAASL,WAAa,EAEtBE,KAAKK,SAASF,GACdG,cAAcN,KAAKO,OACnBP,KAAKO,MAAQC,aAAY,kBAAK,EAAKC,gBAAe,M,yBAEpD,WAEE,IAAIN,EAAQ,eAAOH,KAAKT,OACpBmB,EAAWP,EAASP,UAAc,IAAIQ,KACtCM,EAAW,GAEbP,EAASL,WAAa,EACtBQ,cAAcN,KAAKO,QAInBJ,EAASL,WAAaY,EAAWP,EAASN,cAAgB,IAE5DG,KAAKK,SAASF,K,yBAEhB,WAEE,OACA,qBAAKQ,UAAU,QAAf,SACE,qBAAKA,UAAU,cAAcC,MAAO,CAAEC,MAAiC,IAAxBb,KAAKT,MAAMO,WAAoB,W,oBAMlF,WAAU,IAAD,OACP,OACE,sBAAKa,UAAU,OAAf,UACE,sBAAMA,UAAU,WAAhB,SAA4BG,OAAOC,aACnC,sBAAKJ,UAAU,UAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAMA,UAAU,WAAhB,SAA4B,MAE9B,qBAAKA,UAAU,UAAf,SAA0B,SAC1B,qBAAKA,UAAU,MAAf,SACE,sBAAMA,UAAU,WAAhB,SAA4B,MAE9B,qBAAKA,UAAU,UAAf,SAA0B,MAC1B,qBAAKA,UAAU,MAAf,SACE,sBAAMA,UAAU,WAAhB,SAA4B,UAG9BX,KAAKgB,cAEP,sBAAKL,UAAU,QAAf,UACE,sBAAKA,UAAU,YAAf,UACE,wBAAQA,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,eACA,wBAAQP,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,eACA,wBAAQP,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,kBAEF,sBAAKP,UAAU,YAAf,UACE,wBAAQA,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,eACA,wBAAQP,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,eACA,wBAAQP,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,kBAEF,sBAAKP,UAAU,YAAf,UACE,wBAAQA,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,eACA,wBAAQP,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,eACA,wBAAQP,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,kBAEF,sBAAKP,UAAU,YAAf,UACE,wBAAQA,UAAU,eAAeM,QAAS,eAC1C,wBAAQN,UAAU,eAAeM,QAAS,kBAAM,EAAKC,YAAY,IAAjE,eACA,wBAAQP,UAAU,eAAeM,QAAS,4B,GA5FnCE,IAAMC,WCSVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87e9d14b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      num1 : undefined,\n      num2 : undefined,\n      answer : undefined,\n      timerEnd : undefined,\n      timerDuration : undefined,\n      timerRatio : undefined,\n    };\n    //this.timer = setInterval(()=> this.updateTimer(), 100);\n    \n  }\n  handleClick(i) {\n    this.setTimer(5.0);\n  }\n\n  setTimer(duration)\n  {\n    let newState = {...this.state};\n    newState.timerEnd = (+ new Date()) + duration * 1000;\n    newState.timerDuration = duration;\n    newState.timerRatio = 1.0;\n\n    this.setState(newState);\n    clearInterval(this.timer);\n    this.timer = setInterval(()=> this.updateTimer(), 30);\n  }\n  updateTimer()\n  {\n    let newState = {...this.state};\n    let timeLeft = newState.timerEnd - (+ new Date());\n    if (timeLeft < 0)\n    {\n      newState.timerRatio = 0;\n      clearInterval(this.timer);\n    }\n    else\n    {\n      newState.timerRatio = timeLeft / newState.timerDuration / 1000;\n    }    \n    this.setState(newState);\n  }\n  renderTimer()\n  {        \n    return (\n    <div className=\"timer\">\n      <div className=\"timer-gauge\" style={{ width: ((this.state.timerRatio * 100) + \"%\") }}/>\n    </div>\n    );\n  }\n\n\n  render() {\n    return (\n      <div className=\"game\">\n        <span className=\"text-num\">{window.innerWidth}</span>\n        <div className=\"problem\">\n          <div className=\"box\">\n            <span className=\"text-num\">{7}</span>\n          </div>\n          <div className=\"text-op\">{\"Ã—\"}</div>\n          <div className=\"box\">\n            <span className=\"text-num\">{7}</span>\n          </div>\n          <div className=\"text-op\">{\"=\"}</div>\n          <div className=\"box\">\n            <span className=\"text-num\">{49}</span>\n          </div>\n        </div>\n        { this.renderTimer() }\n          \n        <div className=\"input\">\n          <div className=\"input-row\">\n            <button className=\"input-button\" onClick={() => this.handleClick(7)}>7</button>\n            <button className=\"input-button\" onClick={() => this.handleClick(8)}>8</button>\n            <button className=\"input-button\" onClick={() => this.handleClick(9)}>9</button>\n          </div>\n          <div className=\"input-row\">\n            <button className=\"input-button\" onClick={() => this.handleClick(4)}>4</button>\n            <button className=\"input-button\" onClick={() => this.handleClick(5)}>5</button>\n            <button className=\"input-button\" onClick={() => this.handleClick(6)}>6</button>\n          </div>\n          <div className=\"input-row\">\n            <button className=\"input-button\" onClick={() => this.handleClick(1)}>1</button>\n            <button className=\"input-button\" onClick={() => this.handleClick(2)}>2</button>\n            <button className=\"input-button\" onClick={() => this.handleClick(3)}>3</button>\n          </div>\n          <div className=\"input-row\">\n            <button className=\"input-button\" onClick={() => {}}></button>\n            <button className=\"input-button\" onClick={() => this.handleClick(0)}>0</button>\n            <button className=\"input-button\" onClick={() => {}}></button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}